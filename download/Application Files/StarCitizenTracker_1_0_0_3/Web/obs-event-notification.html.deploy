<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Event Notification - OBS</title>
    <link rel="stylesheet" href="shared/event-styles.css">
    <style>
        body {
            background: transparent;
        }

        .content-area {
            padding: 20px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            position: static;
        }
    </style>
</head>
<body>
    <div class="content-area">
        <div class="event-container" id="eventContainer"></div>
    </div>

    <script src="shared/event-renderer.js"></script>
    <script>
        const contentElement = document.getElementById('eventContainer');
        let eventSource = null;
        let reconnectAttempts = 0;
        const maxReconnectDelay = 30000;
        
        // Get config from URL parameters (optional)
        const urlParams = new URLSearchParams(window.location.search);
        const displayDuration = urlParams.has('duration') 
            ? parseInt(urlParams.get('duration')) * 1000 
            : 20000;

        const renderer = new EventNotificationRenderer(contentElement, { displayDuration });

        function connectSSE() {
            if (eventSource) {
                eventSource.close();
            }

            console.log('Connecting to SSE...');
            eventSource = new EventSource('/events');

            eventSource.addEventListener('shipattack', (event) => {
                console.log('Received ship attack:', event.data);
                const data = JSON.parse(event.data);
                renderer.showShipAttack(data.attacker, data.ship, data.crew);
                reconnectAttempts = 0; // Reset on successful message
            });

            eventSource.addEventListener('example', (event) => {
                console.log('Received example:', event.data);
                const data = JSON.parse(event.data);
                const duration = data.duration || 120000;
                
                const exampleCrew = ['CrewMember1', 'CrewMember2', 'YourName'];
                renderer.showShipAttack('EnemyPilot', 'Constellation Andromeda', exampleCrew);

                // Hide example after duration
                setTimeout(() => {
                    renderer.hide();
                }, duration);
            });

            eventSource.addEventListener('ping', (event) => {
                // Keep-alive ping, ignore
            });

            eventSource.onopen = () => {
                console.log('SSE connection opened');
            };

            eventSource.onerror = (error) => {
                console.error('SSE connection error, retrying...', error);
                eventSource.close();
                
                reconnectAttempts++;
                const delay = Math.min(1000 * Math.pow(2, reconnectAttempts - 1), maxReconnectDelay);
                
                console.log(`Retrying in ${delay}ms...`);
                setTimeout(() => {
                    connectSSE();
                }, delay);
            };
        }

        // Connect immediately
        connectSSE();
    </script>
</body>
</html>
